{"version":3,"sources":["webpack:///./src/templates/blog-list.tsx"],"names":["BlogIndex","data","location","posts","pageContext","allMarkdownRemark","edges","sTitle","site","siteMetadata","title","allYears","filteredYears","className","style","fontSize","fontWeight","description","map","year","i","nodes","filter","node","fields","slug","split","replace","key","id","fontFamily","marginBottom","letterSpacing","frontmatter","boxShadow","to","color","textDecoration","date"],"mappings":"2FAAA,wGAmGeA,UA5DG,SAAC,GAII,IAHrBC,EAGqB,EAHrBA,KACAC,EAEqB,EAFrBA,SAGMC,GADe,EADrBC,YAEcH,EAAKI,kBAAkBC,OAC/BC,EAASN,EAAKO,KAAKC,aAAaC,MAEhCC,EAAWC,YAAcT,GAE/B,OACE,kBAAC,IAAD,CAAQD,SAAUA,EAAUQ,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,wBAAIG,UAAU,aAAd,IAA4BN,GAC5B,6BACA,yBAAKM,UAAU,kCACf,6BACA,uBAAGC,MAAO,CAAEC,SAAU,OAAQC,WAAY,SAAWf,EAAKO,KAAKC,aAAaQ,aAC3EN,EAASO,KAAI,SAACC,EAAMC,GACnB,IAAMC,EAAYlB,EAAMmB,QAAO,gBAAEC,EAAF,EAAEA,KAAF,OAC7BJ,IAASI,EAAKC,OAAOC,KAClBC,MAAM,KAAK,GACXA,MAAM,KAAK,GACXC,QAAQ,SAAS,OAIpB,OACE,oCACA,wBACEC,IAAKT,EACLU,GAAIV,EACJL,MAAO,CAAEgB,WAAY,aAAcC,aAAc,OAAQC,cAAe,QAEvEb,GAEFE,EAAMH,KAAI,WAASE,GAAM,IAAbG,EAAa,EAAbA,KACLb,EAAQa,EAAKU,YAAYvB,OAASa,EAAKC,OAAOC,KAEpD,OACI,oCACE,6BAASI,GAAIN,EAAKC,OAAOC,KAAMG,IAAKL,EAAKC,OAAOC,MAC9C,6BACE,kBAAC,OAAD,CAAMZ,UAAU,aAAaC,MAAO,CAAEoB,UAAW,OAAQlB,WAAY,KAAQmB,GAAIZ,EAAKC,OAAOC,MAC1Ff,GAEH,2BAAOG,UAAU,aAAaC,MAAO,CAAEsB,MAAO,UAAWN,WAAY,aAAcd,WAAY,IAAKqB,eAAgB,SAAU,2BAAId,EAAKU,YAAYK,iBASrK,kBAAC,IAAD","file":"component---src-templates-blog-list-tsx-0155b141ff2524a0bec0.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\";\nimport { PageProps, Link, graphql, navigate } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostFooter from '../components/postFooter'\nimport { rhythm } from \"../utils/typography\"\nimport '../components/global.css'\nimport { filteredYears } from \"../utils/filteredYears\";\n\ntype PageContext = {\n  currentPage: number\n  numPages: number\n}\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n          Head: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({\n  data,\n  location,\n  pageContext,\n}: PageProps<Data>) => {\n  const posts = data.allMarkdownRemark.edges;\n  const sTitle = data.site.siteMetadata.title;\n  \n  const allYears = filteredYears(posts);\n\n  return (\n    <Layout location={location} title={sTitle}>\n      <SEO title=\"All posts\" />\n      <h1 className=\"list-head\"> {sTitle}</h1>\n      <br />\n      <div className=\"fragments fragments-separator\" />\n      <br />\n      <p style={{ fontSize: '14px', fontWeight: 'bold' }}>{data.site.siteMetadata.description}</p>\n      {allYears.map((year, i) => {\n        const nodes:any = posts.filter(({node}: any) => \n          year === node.fields.slug\n            .split(\"/\")[2]\n            .split(\"-\")[0]\n            .replace(/\\\\|\\//g,'')\n          );\n        \n          \n          return (\n            <>\n            <h4 \n              key={year}\n              id={year} \n              style={{ fontFamily: 'sans-serif', marginBottom: '10px', letterSpacing: '0px' }}\n              > \n              {year}\n            </h4>\n            {nodes.map(({node}, i) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              \n              return (\n                  <>\n                    <article id={node.fields.slug} key={node.fields.slug}>\n                      <div>\n                        <Link className=\"blog-links\" style={{ boxShadow: `none`, fontWeight: 300, }} to={node.fields.slug}>\n                          {title}\n                        </Link>\n                        <small className=\"date-blogs\" style={{ color: '#b9b7b7', fontFamily: 'sans-serif', fontWeight: 400, textDecoration: 'none' }}><i>{node.frontmatter.date}</i></small>\n                      </div>\n                    </article>\n                  </>\n                )\n            })}\n          </>\n        )\n      })}\n      <PostFooter />\n    </Layout>\n  )\n};\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            Head\n          }\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}
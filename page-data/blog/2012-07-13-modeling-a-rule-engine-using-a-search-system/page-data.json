{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2012-07-13-modeling-a-rule-engine-using-a-search-system/","result":{"data":{"site":{"siteMetadata":{"title":"Lambdacurry"}},"markdownRemark":{"id":"f040ffa4-fed1-5993-8f1b-be1b6d68ff63","excerpt":"I figured that any set of hierarchical if-then-else rules, given to frequent change can be better maintained as a search engine with boosts. The trick is toâ€¦","html":"<p>I figured that any set of <strong>hierarchical if-then-else rules, given to frequent change</strong> can be better maintained as a search engine with boosts. The trick is to figure out the boosts.</p>\n<p>Indeed the problem is to figure out the weights. From an architectural standpoint, you do need to have a validation layer in your code, but no rule search layer. All that your search engine solution is doing is basically pruning the match space (which your if- then- else would have done).</p>\n<p>You could build interesting solutions in logistics, shipping, marketing using this.</p>","frontmatter":{"title":"Modeling a rule engine using a search system","date":"July 13, 2012"}}},"pageContext":{"slug":"/blog/2012-07-13-modeling-a-rule-engine-using-a-search-system/","previous":{"fields":{"slug":"/blog/2012-06-16-agile-methodology-is-a-merely-a-way-of-re-ordering-bullet-points/"},"frontmatter":{"title":"Agile methodology is a merely a way of re-ordering bullet points"}},"next":{"fields":{"slug":"/blog/2012-07-13-building-a-fully-intervenable-ecommerce-system/"},"frontmatter":{"title":"Building a fully \"intervenable\" ecommerce system"}}}},"staticQueryHashes":["2778469899","2841359383","2882394463","3616023293"]}
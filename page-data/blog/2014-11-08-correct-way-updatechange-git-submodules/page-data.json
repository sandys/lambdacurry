{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2014-11-08-correct-way-updatechange-git-submodules/","result":{"data":{"site":{"siteMetadata":{"title":"Lambdacurry"}},"markdownRemark":{"id":"4527cb79-5500-5752-a89f-66e3d0eea987","excerpt":"rm -rf .git/modules/interesting_modules delete the lines containing “[submodule “interesting_modules”] url=”http://something/” update .gitmodules run “git…","html":"<ul>\n<li>\n<p>rm -rf .git/modules/interesting_modules</p>\n</li>\n<li>\n<p>delete the lines containing “[submodule “interesting_modules”] url=”<a href=\"http://something/\">http://something/</a>”</p>\n</li>\n<li>\n<p>update .gitmodules</p>\n</li>\n<li>\n<p>run “git submodule sync”</p>\n</li>\n<li>\n<p>run “git submodule init”</p>\n</li>\n<li>\n<p>run “git submodule update” - at this point, a new checkout should happen.</p>\n</li>\n<li>\n<p>new checkout will fail about a version mismatch. This is expected - the version of the submodule stored in the super-project is mismatched. “git status” should also show you “modified” in the submodule directory.</p>\n</li>\n<li>\n<p>“cd interesting_submodule”</p>\n</li>\n<li>\n<p>“git reset —hard HEAD”</p>\n</li>\n<li>\n<p>enjoy !</p>\n</li>\n</ul>","frontmatter":{"title":"The correct way to update/change git submodules","date":"November 08, 2014"}}},"pageContext":{"slug":"/blog/2014-11-08-correct-way-updatechange-git-submodules/","previous":{"fields":{"slug":"/blog/2014-11-03-the-android-art-runtime-is-a-golang-tunnel/"},"frontmatter":{"title":"The Android ART runtime is a Golang tunnel"}},"next":{"fields":{"slug":"/blog/2015-01-06-creating-fedora-21-liveusb-ubuntu-14-04/"},"frontmatter":{"title":"The correct way to update/change git submodules"}}}},"staticQueryHashes":["2778469899","2841359383","2882394463","3616023293"]}
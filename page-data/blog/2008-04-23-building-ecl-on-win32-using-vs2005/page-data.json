{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2008-04-23-building-ecl-on-win32-using-vs2005/","result":{"data":{"site":{"siteMetadata":{"title":"Lambdacurry"}},"markdownRemark":{"id":"55f3e557-fe42-5d35-acd2-9166a4b8dc8b","excerpt":"While looking for a suitable lisp to use on a Win32 platform, I wanted to look for one that was natively buildable on it. Chicken sounded interesting, and…","html":"<p>While looking for a suitable lisp to use on a Win32 platform, I wanted to look for one that was natively buildable on it.</p>\n<p><a href=\"http://www.call-with-current-continuation.org/\">Chicken</a> sounded interesting, and moreover they had (at some point of time) made it buildable using <a href=\"http://www.cmake.org/\">cmake</a> (which made me particularly happy, because of the possibility of generating SLN files for Visual Studio 2005). However, for some unknown reason, they gave up on cmake… I wish they would take it up again</p>\n<p><a href=\"http://ecls.sourceforge.net/\">ECL</a> was the next best thing - which later turned out to be the best thing. All I needed to do now was to build it.</p>\n<p>I use <a href=\"http://www.microsoft.com/windowsserver2003/technologies/management/powershell/default.mspx\">Powershell</a> - previously known as Monad (no.. seriously..) - for that unixy shell which is generations ahead of the lowly windows “cmd”. It allows me to specify variables in a startup script and is therefore portable across machines (unlike traditional environment variables in windows which need to be set by right-clicking “My Computer”)</p>\n<p>All you need to do (theoretically) to build ecl is switch to the msvc directory and type “nmake” - this of course doesnt work unless you have some variables set.</p>\n<p>First out, you get loads of <strong>0xc0000139</strong> errors in the build stage - clearly it points to certain DLL entry points not being found. What you need to do is set the path variable correctly:</p>\n<blockquote>\n<p>$env:path=$env:path +:\\Program Files\\Microsoft Visual Studio 8\\Common7\\IDE”</p>\n</blockquote>\n<p>(I think it was due to <strong>mspdb80.dll</strong> or something). In addition I had to download <strong>utildll.dll</strong> and <strong>mobsync.dll</strong> from <a href=\"http://www.nodevice.com/dll/download.html\">NoDevice</a> (and put in one of the “path” directories).</p>\n<p>Second out, I needed <strong>ntwin32.mak</strong> - which as I discovered, defines platform specific variables for Makefiles.</p>\n<blockquote>\n<p>$env:include=$env:include + “;C:\\Program Files\\Microsoft Visual Studio 8\\VC\\PlatformSDK\\Include”</p>\n</blockquote>\n<p>Third, I needed <strong>user32.lib</strong>:</p>\n<blockquote>\n<p>$env:lib = $env:lib + “;C:\\Program Files\\Microsoft Visual Studio 8\\VC\\PlatformSDK\\Lib”</p>\n</blockquote>\n<p>Now that I have a working (and <em>buildable</em> ) implementation of Common Lisp - where to start? SICP or PAIP?</p>","frontmatter":{"title":"Building ECL on Win32 using VS2005","date":"April 23, 2008"}}},"pageContext":{"slug":"/blog/2008-04-23-building-ecl-on-win32-using-vs2005/","previous":{"fields":{"slug":"/blog/2008-04-10-a-short-guide-to-a-non-clunky-treo-650-with-oomph/"},"frontmatter":{"title":"A short guide to a non-clunky Treo 650 (with oomph)"}},"next":{"fields":{"slug":"/blog/2008-05-10-best-programming-fonts/"},"frontmatter":{"title":"Best programming fonts"}}}},"staticQueryHashes":["2778469899","2841359383","2882394463","3616023293"]}
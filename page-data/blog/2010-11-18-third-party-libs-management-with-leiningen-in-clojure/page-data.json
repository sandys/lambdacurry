{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2010-11-18-third-party-libs-management-with-leiningen-in-clojure/","result":{"data":{"site":{"siteMetadata":{"title":"Lambdacurry"}},"markdownRemark":{"id":"7c5d8329-7111-5b6b-b62e-e494c5d05c69","excerpt":"in a particular project, I had to use a 3’rd party jar given to me. I didnt want to go through the whole business of uploading the JAR to clojars and trying to…","html":"<p>in a particular project, I had to use a 3’rd party jar given to me. I didnt want to go through the whole business of uploading the JAR to clojars and trying to manage it.</p>\n<p>An alternative was to install it in my maven local directory using <em><strong>mvn install:install-file</strong></em> . But I wanted something simpler.</p>\n<p>The problem is that if you copy a JAR file into your lib directory and check it into revision control, the moment someone clones the repository and runs <em>lein deps</em>, it will destroy-recreate the <em>lib</em> directory causing the 3’rd party jars to be lost.</p>\n<p>The way I figured to make it work was to use the <em>:disable-implicit-clean true</em> variable, which will prevent delete-recreate of the lib directory.</p>\n<p>A hack.. but it works.</p>","frontmatter":{"title":"third party libs management with leiningen in clojure","date":"November 18, 2010"}}},"pageContext":{"slug":"/blog/2010-11-18-third-party-libs-management-with-leiningen-in-clojure/","previous":{"fields":{"slug":"/blog/2010-11-16-facebook-messaging-google-voice-trust/"},"frontmatter":{"title":"Facebook Messaging is less useful than Google Voice + trust"}},"next":{"fields":{"slug":"/vimrc/"},"frontmatter":{"title":".vimrc"}}}},"staticQueryHashes":["2778469899","2841359383","2882394463","3616023293"]}
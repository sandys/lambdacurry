{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2009-07-30-crowdsourcing-eda-manual-generation-of-test-vectors/","result":{"data":{"site":{"siteMetadata":{"title":"Lambdacurry"}},"markdownRemark":{"id":"fa2881e5-3150-5807-813a-2cc30ddcc132","excerpt":"I am not sure how practical this is, but given that verification takes place over months in chip design, this could well be interesting. A bunch of people from…","html":"<p>I am not sure how practical this is, but given that verification takes place over months in chip design, <a href=\"http://www.ns.umich.edu/htdocs/releases/story.php?id=7252\">this</a> could well be interesting.</p>\n<p>A bunch of people from the University of Michigan have created a <a href=\"http://funsat.eecs.umich.edu/\">web game</a>, which tries to pose on-chip satisfiability (SAT) problems as a game. However, reading its description makes it sound more a <a href=\"http://en.wikipedia.org/wiki/Design_For_Test\">DFT</a> problem.</p>\n<p>Essentially, each dot on a grid is <a href=\"http://en.wikipedia.org/wiki/Controllability\">controllable</a>, which may or may not toggle a dot’s <a href=\"http://en.wikipedia.org/wiki/Observability\">observability</a>. Essentially, what they are doing is the exact opposite of this paper: <a href=\"http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=4212148\">Satisfiability-Based Automatic Test Program Generation and Design for Testability for Microprocessors</a>. Rather than use a automatic solver for test-pattern generation, they are using humans to solve these puzzles.</p>\n<p>I would not call it a true webgame sat solver - because that would entail a game in which you have to generate a combination where two puzzles <strong>dont</strong> match each other.</p>\n<p>I am not entirely too sure about the objective of this study - unlike <a href=\"http://en.wikipedia.org/wiki/Amazon_Mechanical_Turk\">Amazon Mechanical Turk</a> or <a href=\"http://en.wikipedia.org/wiki/Google_Image_Labeler\">Google Image Labeler</a>, both of which are online initiatives which incentivizes (in the form of fun or financial compensation), small tasks which can be combined to create a meaningful whole result.</p>\n<p>There is a technical basis for this question - unlike tagging images, test pattern generation cannot really be partitioned. If indeed it could be, then you could simply multi-thread them (or run something like MapReduce to enable distributed computing). A large enough problem, and you will have lost your ability to attract people, willing to solve the problem.</p>\n<p>So, my conclusion is that this is an impractical, highly speculative academic exercise.</p>","frontmatter":{"title":"Crowdsourcing EDA: manual generation of test-vectors","date":"July 30, 2009"}}},"pageContext":{"slug":"/blog/2009-07-30-crowdsourcing-eda-manual-generation-of-test-vectors/","previous":{"fields":{"slug":"/blog/2009-07-23-collaborative-cheap-secure-and-fast-national-intelligence-data-mining/"},"frontmatter":{"title":"Collaborative, cheap, secure and fast National Intelligence data mining"}},"next":{"fields":{"slug":"/blog/2009-07-31-sony-and-ps3-dumbness-redux/"},"frontmatter":{"title":"Sony and PS3 dumbness: redux"}}}},"staticQueryHashes":["2778469899","2841359383","2882394463","3616023293"]}
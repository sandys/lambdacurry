{"componentChunkName":"component---src-templates-blog-post-js","path":"/_vimrc/","result":{"data":{"site":{"siteMetadata":{"title":"Lambdacurry"}},"markdownRemark":{"id":"419121a4-3481-5f6b-84c0-52ee57406001","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">set ic set autoindent set nocompatible set ruler set showcmd set laststatus=2 set ttyfast ” Indicates a fast terminal connection “set statusline=%=%f\\ \\“%F\\”\\ %m%R\\ [%4l(%3p%%):%3c-(0x%2B,\\0%2b),%Y,%{&amp;encoding}] set statusline=%=%F%m%r%h%w\\ [FORMAT=%{&amp;ff}]\\ [TYPE=%Y]\\ [ASCII=\\%03.3b]\\ [HEX=\\%02.2B]\\ [POS=%04l,%04v][%p%%]\\ [LEN=%L]\n\nset tabstop=2 set shiftwidth=2\n\n” Bad… slows stuff down to a crawl “filetype plugin indent on\n\n” Do clever indent things. Don’t make a # force column zero. set autoindent set smartindent inoremap # X#\n\nset smarttab set expandtab set hlsearch set incsearch set nowrap set showfulltag ” Wrap on these “set listchars+=precedes:&lt;,extends:&gt; set whichwrap+=&lt;,&gt;,[,]\n\n” Use the cool tab complete menu set wildmenu set wildignore=*.o,*~\n\n“This is supposed to issue shortmessages in various situations “I have no clue - from http://jmcantrell.me/files/vimrc.html set shortmess=aTItoO ” |||||| ” |||||+— Message for reading file overwrites previous ” ||||+--- Don’t prompt to overwrite file ” |||+---- Truncate file at start if too long ” ||+----- Disable intro message ” |+------ Truncate messages in the middle if too long\n\nset infercase ” Try to adjust insert completions for case set completeopt=longest,menu,menuone ” | | | ” | | +— Show popup even with one match ” | +------- Use popup menu with completions ” +--------------- Insert longest completion match\n\nset wildmenu ” Enable wildmenu for completion set wildmode=longest:full,list:full ” | | ” | +— List matches, complete first match ” +--------------- Complete longest prefix, use wildmenu\n\n” this makes the mouse paste a block of text without formatting it ” (good for code) map ”*p\n\nset splitright ” When splitting vertically, split to the right set splitbelow ” When splitting horizontally, split below\n\n“This enables windows shortcuts (so sue me) ”http://vim.wikia.com/wiki/Enabling\\_Windows\\_shortcuts\\_for\\_gvim set winaltkeys=yes\n\n“split management set winheight=2 “even when minimized show two lines “maximize split map j_ “minimize split map k_ “reduce size by one line map -\n\n” No icky toolbar, menu or scrollbars in the GUI if has(‘gui’) set guioptions-=m set guioptions-=T set guioptions-=l set guioptions-=L set guioptions-=r set guioptions-=R end\n\n“I’m so propah… I’m falling over meself set lcs+=tab:▷⋅ ” Right triangle and middle dot for tab chars set lcs+=extends:› ” Right single angle for chars right of the screen set lcs+=precedes:‹ ” Left single angle for chars left of the screen set lcs+=nbsp:· ” Middle dot for non-breaking spaces set lcs+=trail:· ” Middle dot for trailing spaces\n\n” Quickfix navigation nmap gc :cnext nmap gC :cprev\n\n” Location list navigation nmap gl :lnext nmap gL :lprev\n\n” Buffer navigation nmap gb :bnext nmap gB :bprev\n\n” Jumplist navigation nnoremap g nnoremap g\n\n” Fix commas without a following space nmap x, :%s/,\\zs\\ze[^\\s]/ /gc ” Fix , with leading spaces nmap x, :silent! %s/\\s\\+,/,/gc\n\n” turn off any existing search au VimEnter * nohls\n\n” Redraw screen and remove search highlights if u press ctrl-l “Life Saver !! nnoremap :nohl\n\n:nmap :tabprevious :nmap :tabnext “:map :tabprevious “:map :tabnext “:imap :tabpreviousi “:imap :tabnexti “:nmap :tabclose “:imap :tabnew :map :tabnew\n\n“colors default “syntax on “set guifont=Consolas:h11:cANSI “set guifont=Monaco\\ 10 “set guifont=Terminus/12/-1/5/50/0/0/0/0/0 “set guifont=Bitstream\\ Vera\\ Sans\\ Mono\\ 11 set guifont=Anonymous\\ Pro\\ 12 “set guifont=Inconsolata\\ 12 “set guifont=Terminus\\ 13 “colorscheme zenburn “colorscheme inkpot “colorscheme wombat “colorscheme sunburst “colorscheme desert\n\n“let g:molokai_original = 0 “colorscheme molokai\n\n“colorscheme xoria256 colorscheme inspiration694250 “colorscheme argonaut\n\n“windows specific “syntax enable “let mysyntaxfile = “C:/Documents and Settings/Administrator/railcasts.vim” “let mysyntaxfile = “C:/Documents and Settings/Administrator/inkpot.vim”\n\n“au BufRead,BufNewFile *.v set filetype=verilog “au! Syntax VERILOG source “C:/Documents and Settings/Administrator/verilog.vim” “source C:\\Documents and Settings\\Administrator\\verilog.vim ” This file is located at: C:\\Documents and Settings\\username\\_vimrc\n\n“the following comment functions allow you to highlight a section ” and press ,c (comma c) to comment and ,d (comma d) to uncomment “comments will happen according to language\n\nfunction! VHDLCommentMap() vmap ,c :s/^/–/ vmap ,d :s/^–// endfunction\n\nfunction! VerilogCommentMap() vmap ,c :s/^/\\/\\// vmap ,d :s/^\\/\\/// endfunction\n\nfunction! PythonCommentMap() vmap ,c :s/^/#/ vmap ,d :s/^#// endfunction\n\nautocmd FileType vhdl call VHDLCommentMap() autocmd FileType verilog,cpp,c call VerilogCommentMap() autocmd FileType tcl,perl,python,ruby call PythonCommentMap()\n\n“folding settings “set foldmethod=indent “fold based on indent “set foldnestmax=3 “deepest fold is 3 levels “set nofoldenable “dont fold by default\n\n&quot;&quot; Folding and unfolding &quot;&quot;map ,f :set foldmethod=indentzM &quot;&quot;map ,F :set foldmethod=manualzR</code></pre></div>","frontmatter":{"title":".vimrc","date":"December 05, 2010"}}},"pageContext":{"slug":"/_vimrc/","previous":{"fields":{"slug":"/blog/2010-12-05-awesome-boot-failure-debugging-flowchart/"},"frontmatter":{"title":"Awesome - boot failure debugging flowchart."}},"next":{"fields":{"slug":"/blog/2010-12-08-pair-programming-as-a-culture-my-jijutsu-vs-yours/"},"frontmatter":{"title":"Pair programming as a culture : my jijutsu vs yours"}}}},"staticQueryHashes":["2778469899","2841359383","2882394463","3616023293"]}